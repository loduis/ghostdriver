# This file is part of the GhostDriver by Ivan De Marino <http://ivandemarino.me>.
#
# Copyright (c) 2012, Ivan De Marino <http://ivandemarino.me>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice,
#       this list of conditions and the following disclaimer in the documentation
#       and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Builds all the atoms that will later be imported in GhostDriver
#
# Here we have a mix of:
#
#    * Atoms from the default WebDriver Atoms directory
#    * Atoms that were not exposed by the default build configuration of Selenium
#    * Atoms purposely built for GhostDriver, still based on the default WebDriver Atoms
#

js_deps(name = "deps",
  srcs = "*.js",
  deps = ["//javascript/atoms:deps",
          "//javascript/webdriver/atoms:deps"])

# Atoms created specifically for GhostDriver

# ================= INJECT =====================

js_fragment(name = "execute_async_script",
  module = "phantomjs.atoms.inject",
  function = "phantomjs.atoms.inject.executeAsyncScript",
  deps = [ ":deps" ])

js_fragment(name = "execute_script",
  module = "phantomjs.atoms.inject",
  function = "phantomjs.atoms.inject.executeScript",
  deps = [ ":deps" ])

# ================= ACTION =====================

js_fragment(name = "click",
  module = "phantomjs.atoms.inject.action",
  function = "phantomjs.atoms.inject.action.click",
  deps = [ ":deps" ])

js_fragment(name = "submit",
  module = "phantomjs.atoms.inject.action",
  function = "phantomjs.atoms.inject.action.submit",
  deps = [ ":deps" ])

js_fragment(name = "clear",
  module = "phantomjs.atoms.inject.action",
  function = "phantomjs.atoms.inject.action.clear",
  deps = [ ":deps" ])

js_fragment(name = "focus_on_element",
  module = "phantomjs.atoms.inject.action",
  function = "phantomjs.atoms.inject.action.focusOnElement",
  deps = [ ":deps" ])

js_fragment(name = "prepare_click",
  module = "phantomjs.atoms.inject.action",
  function = "phantomjs.atoms.inject.action.prepareClick",
  deps = [ ":deps" ])

# ================= FRAME =====================

js_fragment(name = "get_frame_index",
  module = "phantomjs.atoms.inject.frame",
  function = "phantomjs.atoms.inject.frame.getFrameIndex",
  deps = [ ":deps" ])


# ================= DOM =====================

js_fragment(name = "get_location_in_view",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getLocationInView",
  deps = [ ":deps" ])

js_fragment(name = "get_location",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getLocation",
  deps = [ ":deps" ])

js_fragment(name = "get_tag_name",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getTagName",
  deps = [ ":deps" ])

js_fragment(name = "is_same_node",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.isSameNode",
  deps = [ ":deps" ])

js_fragment(name = "is_selected",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.isSelected",
  deps = [ ":deps" ])

js_fragment(name = "is_enabled",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.isEnabled",
  deps = [ ":deps" ])

js_fragment(name = "is_displayed",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.isDisplayed",
  deps = [ ":deps" ])

js_fragment(name = "get_value_of_css_property",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getValueOfCssProperty",
  deps = [ ":deps" ])

js_fragment(name = "get_text",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getText",
  deps = [ ":deps" ])

js_fragment(name = "get_size",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getSize",
  deps = [ ":deps" ])

js_fragment(name = "get_attribute_value",
  module = "phantomjs.atoms.inject.dom",
  function = "phantomjs.atoms.inject.dom.getAttributeValue",
  deps = [ ":deps" ])


# ================= LOCATORS =====================

js_fragment(name = "find_element",
  module = "phantomjs.atoms.inject.locators",
  function = "phantomjs.atoms.inject.locators.findElement",
  deps = [ ":deps" ])

js_fragment(name = "find_elements",
  module = "phantomjs.atoms.inject.locators",
  function = "phantomjs.atoms.inject.locators.findElements",
  deps = [ ":deps" ])

# List of Atoms that will be compiled for GhostDriver
js_deps(name = "build_atoms",
  deps = [
    ":execute_script",
    ":execute_async_script",

    ":click",
    ":clear",
    ":focus_on_element",
    ":prepare_click",
    ":submit",

    ":get_location",
    ":get_location_in_view",
    ":get_tag_name",
    ":is_same_node",
    ":is_selected",
    ":is_enabled",
    ":is_displayed",
    ":get_value_of_css_property",
    ":get_text",
    ":get_size",
    ":get_attribute_value",

    ":find_element",
    ":find_elements",

    ":get_frame_index",

    "//javascript/webdriver/atoms/fragments/inject:set_local_storage_item",
    "//javascript/webdriver/atoms/fragments/inject:get_local_storage_item",
    "//javascript/webdriver/atoms/fragments/inject:get_local_storage_keys",
    "//javascript/webdriver/atoms/fragments/inject:remove_local_storage_item",
    "//javascript/webdriver/atoms/fragments/inject:clear_local_storage",
    "//javascript/webdriver/atoms/fragments/inject:get_local_storage_size",

    "//javascript/webdriver/atoms/fragments/inject:set_session_storage_item",
    "//javascript/webdriver/atoms/fragments/inject:get_session_storage_item",
    "//javascript/webdriver/atoms/fragments/inject:get_session_storage_keys",
    "//javascript/webdriver/atoms/fragments/inject:remove_session_storage_item",
    "//javascript/webdriver/atoms/fragments/inject:clear_session_storage",
    "//javascript/webdriver/atoms/fragments/inject:get_session_storage_size",


    "//javascript/webdriver/atoms/fragments/inject:get_appcache_status",
    "//javascript/webdriver/atoms/fragments/inject:active_element"
  ])